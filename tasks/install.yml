- name: Make sure snapd is installed
  apt:
    name:
      - snapd
    state: present
  become: yes

- name: check if microk8s installed
  shell: snap info microk8s | grep installed
  register: snap_installed
  failed_when: not snap_installed.rc in [0,1]

#- meta: end_play

- name: Install microk8s
  become: yes
  snap:
    name: microk8s
    classic: yes
    channel: "{{ microk8s_version }}"
  when: "not 'installed' in snap_installed.stdout"

- name: Wait for microk8s to be ready
  become: yes
  command: microk8s.status --wait-ready
  changed_when: false
  register: mk8sstatusout

- name: Create kubectl alias
  become: yes
  command: "snap alias microk8s.kubectl kubectl"
  changed_when: false
  register: aliaskubectlout
  
- name: Create helm3 alias
  become: yes
  command: "snap alias microk8s.helm3 helm"
  changed_when: false
  register: aliashelmout
  when: microk8s_plugin_helm3_enable

- name: create folder for microk8s certificates
  become: yes
  file:
    path: /usr/share/ca-certificates/extra
    state: directory

- name: copy certificates
  become: yes
  copy:
    src: "{{ item }}"
    dest: /usr/share/ca-certificates/extra
    remote_src: yes
    force: yes
  with_fileglob:
    - /var/snap/microk8s/current/certs/*ca*.crt

- name: Trust certificates generated by microk8s
  become: yes
  command: "update-ca-certificates"
  register: command_result
  changed_when: "'0 added, 0 removed' not in command_result.stdout"

- name: Enable rbac
  become: yes
  command: "microk8s.enable rbac"
  register: command_result
  changed_when: "'Addon rbac is already enabled' not in command_result.stdout"
  when: microk8s_plugin_rbac_enable

- name: Enable dns
  become: yes
  command: "microk8s.enable dns"
  register: command_result
  changed_when: "'Addon dns is already enabled' not in command_result.stdout"
  when: microk8s_plugin_dns_enable

- name: Enable storage
  become: yes
  command: "microk8s.enable storage"
  register: command_result
  changed_when: "'Addon storage is already enabled' not in command_result.stdout"
  when: microk8s_plugin_storage_enable

- name: Enable registry
  become: yes
  command: "microk8s.enable registry:size={{ microk8s_plugin_registry_size }}"
  register: command_result
  changed_when: "'Addon registry is already enabled' not in command_result.stdout"
  when: microk8s_plugin_registry_enable

- name: Enable metrics-server
  become: yes
  command: "microk8s.enable metrics-server"
  register: command_result
  changed_when: "'Addon metrics-server is already enabled' not in command_result.stdout"
  when: microk8s_plugin_metricsserver_enable

- name: Enable helm3
  become: yes
  command: "microk8s.enable helm3"
  register: command_result
  changed_when: "'Addon helm3 is already enabled' not in command_result.stdout"
  when: microk8s_plugin_helm3_enable

- name: Enable ingress
  become: yes
  command: "microk8s.enable ingress"
  register: command_result
  changed_when: "'Addon ingress is already enabled' not in command_result.stdout"
  when: microk8s_plugin_ingress_enable

- name: Enable dashboard
  become: yes
  command: "microk8s.enable dashboard"
  register: command_result
  changed_when: "'Addon dashboard is already enabled' not in command_result.stdout"
  when: microk8s_plugin_dashboard_enable

- name: Enable fluentd
  become: yes
  command: "microk8s.enable fluentd"
  register: command_result
  changed_when: "'Addon fluentd is already enabled' not in command_result.stdout"
  when: microk8s_plugin_fluentd_enable

- name: Enable prometheus
  become: yes
  command: "microk8s.enable prometheus"
  register: command_result
  changed_when: "'Addon prometheus is already enabled' not in command_result.stdout"
  when: microk8s_plugin_prometheus_enable

- name: Enable metallb
  become: yes
  command: "microk8s.enable metallb"
  register: command_result
  changed_when: "'Addon metallb is already enabled' not in command_result.stdout"
  when: microk8s_plugin_metallb_enable

- name: Enable host access
  become: yes
  command: "microk8s.enable host-access"
  register: command_result
  changed_when: "'Addon host-access is already enabled' not in command_result.stdout"
  when: microk8s_plugin_host_access_enable

- name: Enable traefik
  become: yes
  command: "microk8s.enable traefik"
  register: command_result
  changed_when: "'Addon traefik is already enabled' not in command_result.stdout"
  when: microk8s_plugin_traefik_enable

- name: Disable snap autoupdate
  blockinfile:
    dest: /etc/hosts
    marker: "# {mark} ANSIBLE MANAGED: microk8s Disable snap autoupdate"
    content: |
      127.0.0.1 api.snapcraft.io
  when: microk8s_disable_snap_autoupdate
